/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package AdminModule;

import javax.swing.DefaultListModel;
import javax.swing.table.DefaultTableModel;
import LecturerModule.Exam;
import StudentModule.Student;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Scanner;
import java.util.*;
import javax.security.auth.callback.ConfirmationCallback;
import javax.swing.JOptionPane;

/**
 *
 * @author ahmed
 */
public class gradeapproval extends javax.swing.JFrame {
    DefaultTableModel GradesModel = new DefaultTableModel();
  
    ArrayList<String> studentAnswers = new ArrayList<String>();
    
    Exam exam=new Exam();
    
    
    public gradeapproval() {
        initComponents();
        grade_table.setModel(GradesModel);
        
        
        GradesModel.addColumn("Student id");
        GradesModel.addColumn("Student name");
        GradesModel.addColumn("Course name");
        GradesModel.addColumn("Grade");
        fillReportFile();
        fillTableData();
        
    }
        
    private void fillTableData(){
        Object[] Data = new String[grade_table.getColumnCount()];
        
        try (Scanner reader = new Scanner(new File("src\\report_data.txt"))){
            while(reader.hasNextLine()){
                String Line = reader.nextLine();
                Data = Line.split(" ");
                GradesModel.addRow(Data);
            }
        } catch (Exception e) {
            System.out.println("File not found!\n");
        }    
    }
    private void fillReportFile() {
            String studentName;
            String studentId;
            String studentCourse;
            String studentGrade = exam.gradeExam(getCorrectAnswersfile("CS"), "CS");

            String inputFilePath = "src\\Students.txt";
            String outputFilePath = "src\\report_data.txt";

            try (Scanner reader = new Scanner(new File(inputFilePath)); PrintWriter writer = new PrintWriter(new FileWriter(outputFilePath, false))) {

                while (reader.hasNextLine()) {
                    String line = reader.nextLine();
                    String[] data = line.split(" ");

                    if (data[3].equals("CS")) {
                        if (data.length >= 4) {
                            studentId = data[0];
                            studentName = data[1];
                            studentCourse = data[3];

                            writer.println(studentId + " " + studentName + " " + studentCourse + " " + studentGrade);
                        } else {
                            System.err.println("Invalid line format: " + line);
                        }
                    }
                }

            } catch (FileNotFoundException e) {
                System.err.println("Input file not found: " + inputFilePath);
            } catch (IOException e) {
                System.err.println("Error writing to file: " + outputFilePath);
            }

        
    }

    private ArrayList<String> getCorrectAnswersfile(String coursename) {
        ArrayList<String> corrects = new ArrayList<>();
        try (Scanner answerReader = new Scanner(new File("src\\studentAnswers.txt"))) {
            while (answerReader.hasNextLine()) {
                String answerLine = answerReader.nextLine();
                String[] answer = answerLine.split(" "); // Split answer into parts

                // Combine parts to form the full answer
                if (answer[0].equals(coursename)) {
                    for (int i = 1; i < answer.length; i++) {
                        corrects.add(answer[i]);

                    }

                }

            }

        } catch (IOException e) {
            System.out.println("sad hahahahhaha");
        }
        return corrects;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        grade_table = new javax.swing.JTable();
        publishButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        grade_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Student id", "Student name", "Course name", "grade"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane5.setViewportView(grade_table);

        publishButton.setText("Publish");
        publishButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                publishButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Grades center");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(147, 147, 147)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(179, 179, 179)
                                .addComponent(publishButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(publishButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void publishButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_publishButtonActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Grades published succusfully", "Done",JOptionPane.INFORMATION_MESSAGE );
    }//GEN-LAST:event_publishButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(gradeapproval.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(gradeapproval.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(gradeapproval.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(gradeapproval.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new gradeapproval().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable grade_table;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton publishButton;
    // End of variables declaration//GEN-END:variables
}
