
package LecturerModule;

import LecturerModule.Exam;
import UserModule.MainMenu;
import UserModule.UpdateForm;
import com.sun.source.tree.BreakTree;
import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.GridLayout;
import java.awt.Stroke;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import java.util.*;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class LecturerForm extends javax.swing.JFrame {

    
    
    
    DefaultListModel<String>createExamQuestions=new   DefaultListModel <>(); 
    DefaultListModel<String> examsModel = new DefaultListModel<>();
    DefaultListModel<String> modifyExamQuestions = new DefaultListModel<>();
    
    DefaultTableModel reportingModel = new DefaultTableModel();

    
    ArrayList< Exam > exams=new ArrayList<>();
    
   
    
    
    
  
    ArrayList<String> ques=new ArrayList<>();
    ArrayList<String> correct=new ArrayList<>();
    ArrayList<String> modifiedAnswers = new ArrayList<>();
    ArrayList<String> duration=new ArrayList<>();
    String CourseName;
    
    public LecturerForm(Lecturer lecturer) {
        initComponents();
        showquestion.setModel(createExamQuestions);
        examslist.setModel(examsModel);
        questionsList.setModel(modifyExamQuestions);
        reportingTable.setModel(reportingModel);

        helloMessege.setText("Hello, " + lecturer.getName());
        
        reportingModel.addColumn("Student id");
        reportingModel.addColumn("Student name");
        reportingModel.addColumn("Course name");
        reportingModel.addColumn("Grade");
        
        fillReportFile();
        fillTableData();
        addData();        
    }    
    
    private void fillTableData(){
        Object[] Data = new String[4];
        
        try (Scanner reader = new Scanner(new File("src\\report_data.txt"))){
            while(reader.hasNextLine()){
                String Line = reader.nextLine();
                Data = Line.split(" ");
                reportingModel.addRow(Data);
            }
        } catch (Exception e) {
            System.out.println("File not found!\n");
        }    
    }
    
    private void fillReportFile() {
        String studentName;
        String studentId;


        String inputFilePath = "src/Students.txt";
        String outputFilePath = "src/report_data.txt";

        try (Scanner reader = new Scanner(new File(inputFilePath));
            PrintWriter writer = new PrintWriter(new FileWriter(outputFilePath, false))) { 


            while (reader.hasNextLine()) {
                String line = reader.nextLine();
                String[] data = line.split(" ");


                if (data.length >= 2) {
                    studentId = data[0];
                    studentName = data[1];


                        writer.println(studentId + " " + studentName + " CS 10");
                    } else {
                        System.err.println("Invalid line format: " + line);
                }
            }

            } catch (FileNotFoundException e) {
                System.err.println("Input file not found: " + inputFilePath);
                } catch (IOException e) {
                    System.err.println("Error writing to file: " + outputFilePath);
                    }
    }

        
        
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void addData(){
        ArrayList<String> questions = new ArrayList<>();
        ArrayList<String> correctAnswers = new ArrayList<>();
        
        
        
        try (Scanner examReader = new Scanner(new File("src\\exams.txt"))) {
            while (examReader.hasNextLine()) {
                String examLine = examReader.nextLine();
                String[] exam = examLine.split(" "); // Split the line by spaces

                String courseName = exam[0]; // First part is the course name
                String duration = exam[1];   // Second part is the duration

                questions.clear();
                correctAnswers.clear();

                // Read questions from the questions.txt file
                try (Scanner questionReader = new Scanner(new File("src\\questions.txt"))) {
                    while (questionReader.hasNextLine()) {
                        String questionLine = questionReader.nextLine();
                        String[] question = questionLine.split(" "); // Split question into parts

                        // Combine parts to form the full question
                        if(question[0].equals(courseName)){
                            for (int i = 1; i<question.length;i++) {
                                questions.add(question[i]);
                            }

                        }
                    }
                } catch (IOException e) {
                    System.out.println("Error reading questions file: " + e.getMessage());
                }

                // Read answers from the correctAnswers.txt file
                try (Scanner answerReader = new Scanner(new File("src\\correctAnswers.txt"))) {
                    while (answerReader.hasNextLine()) {
                        String answerLine = answerReader.nextLine();
                        String[] answer = answerLine.split(" "); // Split answer into parts

                        // Combine parts to form the full answer
                        if(answer[0].equals(courseName)){
                            for (int i = 1; i<answer.length;i++) {
                                correctAnswers.add(answer[i]);
                            }

                        }
                    }
                } catch (IOException e) {
                    System.out.println("Error reading answers file: " + e.getMessage());
                }

                // Ensure the number of questions matches the number of correct answers
                if (questions.size() == correctAnswers.size()) {
                    // Add the parsed exam to the list
                    exams.add(new Exam(duration, questions, correctAnswers, courseName));
                    examsModel.addElement(courseName); // Populate the UI model
                } else {
                    System.out.println("Error: Questions and answers do not match for exam: " + courseName);
                }
            }
        } catch (IOException e) {
            System.out.println("Error reading the exams file: " + e.getMessage());
        }
    }
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainTabs = new javax.swing.JTabbedPane();
        examManagmentPanel = new javax.swing.JPanel();
        ExamTabs = new javax.swing.JTabbedPane();
        createExamPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        setQuestion = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        CorrectAnswer = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        setduration = new javax.swing.JTextField();
        Submit = new java.awt.Button();
        jScrollPane1 = new javax.swing.JScrollPane();
        showquestion = new javax.swing.JList<>();
        REMOVEquestion = new java.awt.Button();
        AddQuestion = new java.awt.Button();
        jLabel17 = new javax.swing.JLabel();
        setCourseName = new javax.swing.JTextField();
        modifyExamPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        examslist = new javax.swing.JList<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        modifyDuration = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        modifyQuestion = new javax.swing.JTextField();
        modifyCourseName = new javax.swing.JTextField();
        jComboBox2 = new javax.swing.JComboBox<>();
        modifyCorrectAnswer = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        questionsList = new javax.swing.JList<>();
        jLabel20 = new javax.swing.JLabel();
        modifyExam = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        reportingToolsPanel = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        reportingTable = new javax.swing.JTable();
        helloMessege = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        mainTabs.setFocusable(false);

        ExamTabs.setFocusable(false);

        jLabel2.setText("Question :");

        jLabel1.setText("Answer Type :");

        jLabel3.setText("Correct Answer :");

        setQuestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setQuestionActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Multiple Choice", "True/False", "Short Answer" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        CorrectAnswer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CorrectAnswerActionPerformed(evt);
            }
        });

        jLabel4.setText("Duration :");

        setduration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setdurationActionPerformed(evt);
            }
        });

        Submit.setActionCommand("submit");
        Submit.setBackground(new java.awt.Color(255, 153, 51));
        Submit.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        Submit.setForeground(new java.awt.Color(255, 255, 255));
        Submit.setLabel("submit");
        Submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(showquestion);

        REMOVEquestion.setBackground(new java.awt.Color(255, 153, 51));
        REMOVEquestion.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        REMOVEquestion.setForeground(new java.awt.Color(255, 255, 255));
        REMOVEquestion.setLabel("remove");
        REMOVEquestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                REMOVEquestionActionPerformed(evt);
            }
        });

        AddQuestion.setBackground(new java.awt.Color(255, 153, 51));
        AddQuestion.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        AddQuestion.setForeground(new java.awt.Color(255, 255, 255));
        AddQuestion.setLabel("Add Quesstion");
        AddQuestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddQuestionActionPerformed(evt);
            }
        });

        jLabel17.setText("Course name : ");

        javax.swing.GroupLayout createExamPanelLayout = new javax.swing.GroupLayout(createExamPanel);
        createExamPanel.setLayout(createExamPanelLayout);
        createExamPanelLayout.setHorizontalGroup(
            createExamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createExamPanelLayout.createSequentialGroup()
                .addGroup(createExamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(createExamPanelLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(createExamPanelLayout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(Submit, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(158, Short.MAX_VALUE))
            .addGroup(createExamPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(createExamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(createExamPanelLayout.createSequentialGroup()
                        .addComponent(AddQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(REMOVEquestion, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createExamPanelLayout.createSequentialGroup()
                        .addGroup(createExamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(createExamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createExamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(setQuestion)
                                .addComponent(jComboBox1, 0, 164, Short.MAX_VALUE)
                                .addComponent(CorrectAnswer)
                                .addComponent(setduration))
                            .addComponent(setCourseName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14))))
        );
        createExamPanelLayout.setVerticalGroup(
            createExamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createExamPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(createExamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(setduration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(createExamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(setQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(createExamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(createExamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CorrectAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(createExamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(setCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(createExamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AddQuestion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(REMOVEquestion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addComponent(Submit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        ExamTabs.addTab("Create exam", createExamPanel);

        examslist.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        examslist.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        examslist.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                examslistValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(examslist);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Exams");

        jLabel6.setText("Duration :");

        modifyDuration.setEditable(false);
        modifyDuration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyDurationActionPerformed(evt);
            }
        });

        jLabel7.setText("Question :");

        jLabel8.setText("Answer Type :");

        jLabel16.setText("Correct Answer :");

        jLabel18.setText("Course name : ");

        modifyQuestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyQuestionActionPerformed(evt);
            }
        });

        modifyCourseName.setEditable(false);

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Multiple Choice", "True/False", "Short Answer" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        modifyCorrectAnswer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyCorrectAnswerActionPerformed(evt);
            }
        });

        questionsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        questionsList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                questionsListValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(questionsList);

        jLabel20.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel20.setText("Questions");

        modifyExam.setBackground(new java.awt.Color(255, 153, 0));
        modifyExam.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        modifyExam.setForeground(new java.awt.Color(255, 255, 255));
        modifyExam.setText("modify Question");
        modifyExam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyExamActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(255, 153, 0));
        jButton6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Remove question");
        jButton6.setPreferredSize(new java.awt.Dimension(148, 31));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout modifyExamPanelLayout = new javax.swing.GroupLayout(modifyExamPanel);
        modifyExamPanel.setLayout(modifyExamPanelLayout);
        modifyExamPanelLayout.setHorizontalGroup(
            modifyExamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(modifyExamPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(modifyExamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(modifyExamPanelLayout.createSequentialGroup()
                        .addGroup(modifyExamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(modifyExamPanelLayout.createSequentialGroup()
                                .addGroup(modifyExamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(modifyExamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(modifyDuration, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(modifyCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(modifyExamPanelLayout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(modifyExam)))
                        .addGap(18, 18, 18)
                        .addGroup(modifyExamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, modifyExamPanelLayout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(modifyQuestion))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, modifyExamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(modifyExamPanelLayout.createSequentialGroup()
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(modifyExamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(modifyCorrectAnswer)
                                    .addGroup(modifyExamPanelLayout.createSequentialGroup()
                                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))))
                    .addGroup(modifyExamPanelLayout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        modifyExamPanelLayout.setVerticalGroup(
            modifyExamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(modifyExamPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(modifyExamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(modifyExamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(modifyExamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(modifyCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(modifyQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(modifyExamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(modifyDuration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(modifyCorrectAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(modifyExamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(modifyExamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modifyExam)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(81, Short.MAX_VALUE))
        );

        ExamTabs.addTab("Modify exam", modifyExamPanel);

        javax.swing.GroupLayout examManagmentPanelLayout = new javax.swing.GroupLayout(examManagmentPanel);
        examManagmentPanel.setLayout(examManagmentPanelLayout);
        examManagmentPanelLayout.setHorizontalGroup(
            examManagmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ExamTabs)
        );
        examManagmentPanelLayout.setVerticalGroup(
            examManagmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ExamTabs)
        );

        mainTabs.addTab("Exam Management", examManagmentPanel);

        reportingTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Student id", "Student name", "Course name", "grade"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane5.setViewportView(reportingTable);

        javax.swing.GroupLayout reportingToolsPanelLayout = new javax.swing.GroupLayout(reportingToolsPanel);
        reportingToolsPanel.setLayout(reportingToolsPanelLayout);
        reportingToolsPanelLayout.setHorizontalGroup(
            reportingToolsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reportingToolsPanelLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(74, Short.MAX_VALUE))
        );
        reportingToolsPanelLayout.setVerticalGroup(
            reportingToolsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, reportingToolsPanelLayout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        mainTabs.addTab("Reporting Tool", reportingToolsPanel);

        helloMessege.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        helloMessege.setText("Hello,");

        jButton3.setText("Update");
        jButton3.setFocusable(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Logout");
        jButton4.setFocusable(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(helloMessege, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addGap(16, 16, 16))
            .addGroup(layout.createSequentialGroup()
                .addComponent(mainTabs, javax.swing.GroupLayout.PREFERRED_SIZE, 571, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(helloMessege)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mainTabs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void CorrectAnswerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CorrectAnswerActionPerformed
        // TODO add your handling code here:
       
   
    }//GEN-LAST:event_CorrectAnswerActionPerformed

    private void setdurationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setdurationActionPerformed
    
  
    }//GEN-LAST:event_setdurationActionPerformed

    private void SubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitActionPerformed
       /*
        question.addElement(setQuestion.getText());
        */
       Exam exam=new Exam(setduration.getText(),ques,correct,setCourseName.getText());
       exam.saveToFile();
       
       exams.add(exam);
       examsModel.addElement(setCourseName.getText());
       
       
       createExamQuestions.clear();
       ques.clear();
       correct.clear();
       
       setduration.setText("");
       setQuestion.setText("");
       CorrectAnswer.setText("");
       setCourseName.setText("");
       
       
       
       
       for(Exam Exam : exams){
           System.out.println(Exam.toString());
       }
 
       
    }//GEN-LAST:event_SubmitActionPerformed

    private void setQuestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setQuestionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_setQuestionActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        new UpdateForm(2).setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        dispose();
        new MainMenu().setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void REMOVEquestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_REMOVEquestionActionPerformed
        // TODO add your handling code here:
        try {  
        createExamQuestions.remove(showquestion.getSelectedIndex());
        ques.remove(showquestion.getSelectedIndex());
        correct.remove(showquestion.getSelectedIndex());
         
            
        } catch (Exception e) {
              
        }
      
    }//GEN-LAST:event_REMOVEquestionActionPerformed

    private void AddQuestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddQuestionActionPerformed
        // TODO add your handling code here:
        ques.add(setQuestion.getText());
        correct.add(CorrectAnswer.getText());
        createExamQuestions.addElement(setQuestion.getText());
        
        setQuestion.setText("");
        CorrectAnswer.setText("");
          
    }//GEN-LAST:event_AddQuestionActionPerformed

    private void modifyDurationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyDurationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_modifyDurationActionPerformed

    private void modifyQuestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyQuestionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_modifyQuestionActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void modifyCorrectAnswerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyCorrectAnswerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_modifyCorrectAnswerActionPerformed

    private void examslistValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_examslistValueChanged
        // TODO add your handling code here: 
        if (!evt.getValueIsAdjusting()) {
            String selectedExamName = examslist.getSelectedValue();
            questionsList.clearSelection();
            modifyExamQuestions.clear();
            if (selectedExamName != null) {
                for (Exam exam : exams) {
                    if (exam.getCourseName().equals(selectedExamName)) {
                        for (String question : exam.getQuestions()) {
                            modifyExamQuestions.addElement(question);
                            questionsList.updateUI();
                        }
                        break;
                    }
                }
            }
        }

    }//GEN-LAST:event_examslistValueChanged

    private void questionsListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_questionsListValueChanged
        // TODO add your handling code here:    
        if (evt.getValueIsAdjusting()) {
            String selectedExamName = examslist.getSelectedValue();
            for (Exam exam : exams) {
                if (exam.getCourseName().equals(selectedExamName)) {
                    int selectedIndex = questionsList.getSelectedIndex();

//                    if (selectedIndex >= 0 && selectedIndex < exam.getQuestions().size()) {
                        modifyCourseName.setText(exam.getCourseName());
                        modifyDuration.setText(exam.getDuration());
                        modifyQuestion.setText(exam.getQuestions().get(selectedIndex));
                        modifyCorrectAnswer.setText(exam.getCorrectAnswers().get(selectedIndex));
                    }
//                }
            }
        }
//        modifyQuestion.setText(questionsList.getSelectedValue());
        
    }//GEN-LAST:event_questionsListValueChanged

    private void modifyExamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyExamActionPerformed
        // TODO add your handling code here:
        String question = modifyQuestion.getText();
        String correct = modifyCorrectAnswer.getText();
        
        
        for(Exam exam : exams){
            if(examslist.getSelectedValue().equals(exam.getCourseName())){
                exam.modifyquestion(question, questionsList.getSelectedIndex());
                exam.modifyanswer(correct, questionsList.getSelectedIndex());
                exam.modifyToFile();
            }
        }
        
        
        
    }//GEN-LAST:event_modifyExamActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LecturerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LecturerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LecturerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LecturerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
      
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LecturerForm(new Lecturer("ahmed", "1234")).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button AddQuestion;
    private javax.swing.JTextField CorrectAnswer;
    private javax.swing.JTabbedPane ExamTabs;
    private java.awt.Button REMOVEquestion;
    private java.awt.Button Submit;
    private javax.swing.JPanel createExamPanel;
    private javax.swing.JPanel examManagmentPanel;
    private javax.swing.JList<String> examslist;
    private javax.swing.JLabel helloMessege;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane mainTabs;
    private javax.swing.JTextField modifyCorrectAnswer;
    private javax.swing.JTextField modifyCourseName;
    private javax.swing.JTextField modifyDuration;
    private javax.swing.JButton modifyExam;
    private javax.swing.JPanel modifyExamPanel;
    private javax.swing.JTextField modifyQuestion;
    private javax.swing.JList<String> questionsList;
    private javax.swing.JTable reportingTable;
    private javax.swing.JPanel reportingToolsPanel;
    private javax.swing.JTextField setCourseName;
    private javax.swing.JTextField setQuestion;
    private javax.swing.JTextField setduration;
    public javax.swing.JList<String> showquestion;
    // End of variables declaration//GEN-END:variables
}
