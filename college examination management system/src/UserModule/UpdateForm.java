/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UserModule;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.nio.file.Files;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Ahmed Nagah
 */
public class UpdateForm extends javax.swing.JFrame {

    private int loginType;
    
    public UpdateForm(int loginType) {
        initComponents();
        this.loginType = loginType;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        updateSubmit = new javax.swing.JButton();
        jTextField3 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        cancelbutton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("update your information");

        jLabel2.setText("username");

        jLabel3.setText("password");

        updateSubmit.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        updateSubmit.setText("confirm");
        updateSubmit.setFocusable(false);
        updateSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateSubmitActionPerformed(evt);
            }
        });

        jLabel4.setText("course name");

        jLabel5.setText("enter your id");

        cancelbutton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cancelbutton.setText("cancel");
        cancelbutton.setFocusable(false);
        cancelbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelbuttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel5)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(1, 1, 1)
                                    .addComponent(jLabel4)))
                            .addGap(43, 43, 43)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField1)
                                    .addComponent(jTextField2)
                                    .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(updateSubmit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cancelbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateSubmitActionPerformed
        // TODO add your handling code here:
        String id = jTextField4.getText();
        String name = jTextField1.getText();
        String password = jTextField2.getText();
        String subject = jTextField3.getText();
        
        if(id.isEmpty() || name.isEmpty() || password.isEmpty() || subject.isEmpty()){
            JOptionPane.showMessageDialog(null, "Please fill in all the fields.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        String[] updatedContent = {jTextField4.getText(),jTextField1.getText(),jTextField2.getText(),jTextField3.getText()};
        String updatedLine = String.join(" ", updatedContent);
        
        
        ArrayList<String> lines = new ArrayList<>();
        boolean idExist = false;
        if(loginType == 2){
            try (Scanner fileReader = new Scanner(new File("src\\Lecturers.txt"))) {
                while (fileReader.hasNext()) {
                    String oldLine = fileReader.nextLine();
                    String[] oldContent = oldLine.split(" ");

                    if (oldContent[0].equals(updatedContent[0])) {
                        idExist = true;
                        lines.add(updatedLine);
                    } else {
                        lines.add(oldLine);
                    }
                }
                if (!idExist) {
                    JOptionPane.showMessageDialog(null, "The entered ID does not exist", "ID not found", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                try (PrintWriter write = new PrintWriter("src\\Lecturers.txt")) {
                    for (String line : lines) {
                        write.println(line);
                    }
                } catch (Exception e) {
                    System.err.println("Error writing to file: " + e.getMessage());
                }
                JOptionPane.showMessageDialog(null, "Your information has been updated successfully!", "Update Successful", JOptionPane.INFORMATION_MESSAGE);

                dispose();
            } catch (FileNotFoundException ex) {
                System.err.println("File not found: " + ex.getMessage());
            }
        }
        else if(loginType == 1){
            try (Scanner fileReader = new Scanner(new File("src\\Admins.txt"))) {
                while (fileReader.hasNext()) {
                    String oldLine = fileReader.nextLine();
                    String[] oldContent = oldLine.split(" ");

                    if (oldContent[0].equals(updatedContent[0])) {
                        idExist = true;
                        lines.add(updatedLine);
                    } else {
                        lines.add(oldLine);
                    }
                }
                if (!idExist) {
                    JOptionPane.showMessageDialog(null, "The entered ID does not exist", "ID not found", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                try (PrintWriter write = new PrintWriter("src\\Admins.txt")) {
                    for (String line : lines) {
                        write.println(line);
                    }
                } catch (Exception e) {
                    System.err.println("Error writing to file: " + e.getMessage());
                }
                JOptionPane.showMessageDialog(null, "Your information has been updated successfully!", "Update Successful", JOptionPane.INFORMATION_MESSAGE);

                dispose();
            } catch (FileNotFoundException ex) {
                System.err.println("File not found: " + ex.getMessage());
            }
        }
        else{
            try (Scanner fileReader = new Scanner(new File("src\\Students.txt"))) {
                while (fileReader.hasNext()) {
                    String oldLine = fileReader.nextLine();
                    String[] oldContent = oldLine.split(" ");

                    if (oldContent[0].equals(updatedContent[0])) {
                        idExist = true;
                        lines.add(updatedLine);
                    } else {
                        lines.add(oldLine);
                    }
                }
                if (!idExist) {
                    JOptionPane.showMessageDialog(null, "The entered ID does not exist", "ID not found", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                try (PrintWriter write = new PrintWriter("src\\Students.txt")) {
                    for (String line : lines) {
                        write.println(line);
                    }
                } catch (Exception e) {
                    System.err.println("Error writing to file: " + e.getMessage());
                }
                JOptionPane.showMessageDialog(null, "Your information has been updated successfully!", "Update Successful", JOptionPane.INFORMATION_MESSAGE);

                dispose();
            } catch (FileNotFoundException ex) {
                System.err.println("File not found: " + ex.getMessage());
            }
        }
        
        
        
    }//GEN-LAST:event_updateSubmitActionPerformed

    private void cancelbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelbuttonActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_cancelbuttonActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(UpdateForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(UpdateForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(UpdateForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(UpdateForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new UpdateForm().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelbutton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JButton updateSubmit;
    // End of variables declaration//GEN-END:variables
}
